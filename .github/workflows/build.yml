name: Build and Archive Workflow

on:
  schedule:
    - cron: '0 0 * * *'  # This runs every day at midnight
  push:
    branches:
      - master  # Change this to your default branch if it's different

jobs:
  build-and-archive:
    runs-on: windows-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install Dependencies
      run: pip install -r requirements.txt

    - name: Run PyInstaller
      run: python -m PyInstaller BenefitCostRatioCalcApp.spec 

    - name: Display Generated Files
      run: Get-ChildItem -Path dist -Recurse
      shell: pwsh

    - name: Get Short Commit Hash
      id: commit_hash
      run: echo "::set-output name=commit_hash::${{ github.sha }}"

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ steps.commit_hash.outputs.commit_hash }}-${{ steps.timestamp.outputs.timestamp }}
        release_name: Release ${{ steps.commit_hash.outputs.commit_hash }}-${{ steps.timestamp.outputs.timestamp }}
        body: Description of the release
        draft: false
        prerelease: false

    - name: Get Timestamp
      id: timestamp
      run: echo "::set-output name=timestamp::$(Get-Date -u +'%Y%m%d%H%M%S')"

    - name: Archive dist directory
      run: Compress-Archive -Path dist/* -DestinationPath dist.zip -Force
      shell: pwsh
  
    - name: Upload dist.zip as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: dist-folder
        path: dist.zip

    - name: Attach Artifact to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist.zip
        asset_name: dist.zip
        asset_content_type: application/zip

    - name: Cleanup Artifacts
      run: rm dist.zip
      shell: pwsh

    # Optional: Notify team members or stakeholders, integrate with other systems, etc.
